/*
 *	osgART/Tracker/ARToolKit/MultiMarker
 *	osgART: AR ToolKit for OpenSceneGraph
 *
 *	Copyright (c) 2005-2007 ARToolworks, Inc. All rights reserved.
 *	
 *	Rev		Date		Who		Changes
 *  1.0   	2006-12-08  ---     Version 1.0 release.
 *
 */
/*
 * This file is part of osgART - AR Toolkit for OpenSceneGraph
 *
 * Copyright (c) 2005-2007 ARToolworks, Inc. All rights reserved.
 *
 * (See the AUTHORS file in the root of this distribution.)
 *
 *
 * OSGART is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * OSGART is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OSGART; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 *
 */


#ifndef OSGART_MULTIMARKER
#define OSGART_MULTIMARKER 1

// STL include
#include <string>
#include <vector>

// local include
#include <osgART/Export>
#include <osgART/Marker>

// ARToolKit multimarker include
#include <ARToolKitPlus/Tracker.h>

namespace osgART {

	/**
	* \class MultiMarker
	* \brief A marker consisting of many patterns which can be treated as one.
	*/
	class MultiMarker : public Marker
	{
	public:       

		/** 
		* \brief default constructor.
		*
		*/
		MultiMarker(ARToolKitPlus::Tracker* tracker);
	    
		bool initialise(const std::string& multiFile);
		
		virtual void setActive(bool a);
		
		void update(ARToolKitPlus::ARMarkerInfo* markerInfo, int markerCount);
		
                bool represents(int markerID);

		/**
		* \brief return the type of the maker.
		* return if the marker is a single or multi-pattern marker.
		* \return the type of the marker
		*/
		MarkerType getType() const;
		
	    
	protected: 
	
		/**
		* \brief destructor.
		*/
		virtual ~MultiMarker();

                ARToolKitPlus::Tracker *m_tracker;

                ARToolKitPlus::ARMultiMarkerInfoT* m_multi;
			
	};
};

#endif
